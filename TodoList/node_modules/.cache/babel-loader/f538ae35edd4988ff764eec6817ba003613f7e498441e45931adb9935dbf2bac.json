{"ast":null,"code":"import React from'react';import TodoItem from'./TodoItem.js';import'./TodoList.css';import{jsx as _jsx}from\"react/jsx-runtime\";function TodoList(_ref){let{todos,editTodo,deleteTodo,toggleComplete}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"todo-list\",children:todos.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No notes available...\"}):todos.map((todo,index)=>/*#__PURE__*/_jsx(TodoItem,{todo:todo,index:index,editTodo:editTodo,deleteTodo:deleteTodo,toggleComplete:toggleComplete},index))});}export default TodoList;","map":{"version":3,"names":["React","TodoItem","jsx","_jsx","TodoList","_ref","todos","editTodo","deleteTodo","toggleComplete","className","children","length","map","todo","index"],"sources":["/Users/adityagaba/Downloads/To-do-list/TodoList/src/components/TodoList.js"],"sourcesContent":["import React from 'react';\nimport TodoItem from './TodoItem.js';\nimport './TodoList.css';\n\nfunction TodoList({ todos, editTodo, deleteTodo, toggleComplete }) {\n  return (\n    <div className=\"todo-list\">\n      {todos.length === 0 ? (\n        <p>No notes available...</p>\n      ) : (\n        todos.map((todo, index) => (\n          <TodoItem\n            key={index}\n            todo={todo}\n            index={index}\n            editTodo={editTodo}\n            deleteTodo={deleteTodo}\n            toggleComplete={toggleComplete}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default TodoList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,eAAe,CACpC,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAkD,IAAjD,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,cAAe,CAAC,CAAAJ,IAAA,CAC/D,mBACEF,IAAA,QAAKO,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBL,KAAK,CAACM,MAAM,GAAK,CAAC,cACjBT,IAAA,MAAAQ,QAAA,CAAG,uBAAqB,CAAG,CAAC,CAE5BL,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACpBZ,IAAA,CAACF,QAAQ,EAEPa,IAAI,CAAEA,IAAK,CACXC,KAAK,CAAEA,KAAM,CACbR,QAAQ,CAAEA,QAAS,CACnBC,UAAU,CAAEA,UAAW,CACvBC,cAAc,CAAEA,cAAe,EAL1BM,KAMN,CACF,CACF,CACE,CAAC,CAEV,CAEA,cAAe,CAAAX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}